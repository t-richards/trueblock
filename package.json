{
  "private": true,
  "devDependencies": {
    "@testing-library/jest-dom": "^5.16.4",
    "@testing-library/preact": "^3.2.2",
    "@types/chrome": "^0.0.193",
    "@types/jest": "^27.0",
    "@typescript-eslint/eslint-plugin": "^5.31.0",
    "@typescript-eslint/parser": "^5.31.0",
    "eslint": "^8.20.0",
    "eslint-plugin-jest": "^26.6.0",
    "jest": "^27.0",
    "jest-environment-jsdom": "^27.0",
    "ts-jest": "^27.0",
    "typescript": "^4.7.4"
  },
  "dependencies": {
    "@picocss/pico": "^1.5.3",
    "esbuild": "^0.14.50",
    "preact": "^10.10.0"
  },
  "scripts": {
    "build": "esbuild src/background.ts src/popup.tsx src/options.tsx src/app.css --bundle --drop:console --legal-comments=none --minify --outdir=dist",
    "build:dev": "esbuild src/background.ts src/popup.tsx src/options.tsx src/app.css --bundle --sourcemap --watch --outdir=dist",
    "dist": "npm run clean && npm run build && npm run pack",
    "clean": "rm -f dist/*.js dist/*.css dist/*.map dist/*.zip",
    "lint": "eslint . --ext .ts,.tsx --fix",
    "pack": "cd dist && zip -r trueblock.zip *",
    "test": "jest --coverage=true",
    "tsc": "tsc --project tsconfig.json --noEmit --watch --preserveWatchOutput"
  },
  "jest": {
    "clearMocks": true,
    "collectCoverageFrom": [
      "src/**/*.{ts,tsx}"
    ],
    "coverageDirectory": "coverage",
    "coverageReporters": [
      "clover",
      "html",
      "json",
      "lcov",
      "text"
    ],
    "preset": "ts-jest",
    "setupFilesAfterEnv": [
      "./src/setupTests.ts"
    ],
    "testEnvironment": "jsdom",
    "transform": {
      "^.+\\.tsx?$": "ts-jest"
    }
  },
  "eslintConfig": {
    "env": {
      "browser": true,
      "webextensions": true,
      "jest/globals": true
    },
    "extends": [
      "eslint:recommended",
      "plugin:@typescript-eslint/recommended",
      "plugin:jest/recommended",
      "plugin:jest/style"
    ],
    "parser": "@typescript-eslint/parser",
    "plugins": [
      "@typescript-eslint",
      "jest"
    ],
    "root": true,
    "rules": {
      "@typescript-eslint/no-unused-vars": [
        "error",
        {
          "argsIgnorePattern": "^_",
          "varsIgnorePattern": "^h$"
        }
      ],
      "quotes": [
        "error",
        "single"
      ],
      "semi": [
        "error",
        "never"
      ]
    }
  }
}
